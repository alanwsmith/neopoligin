{
    "notes": {
      "notes": [
        "all the attrs will be tested under aside since it's the first section in the tests"
      ]
    },
  
    "sections": [
  

  

  
      {
        "name": "Attribute Test: autofocus",
        "notes": ["autofocus has now value. It either exists in the element or it does not"],
        "parts": {
          "input": "-- p\n-- autofocus\n",
          "expected": [
            {
              "type": "p",
              "attributes": [
                {"type": "autofocus"}
              ],
              "content": null
            }
          ]
        }
      },
  
  
      {
        "name": "Attribute Test: class (single)",
        "notes": ["class is stored as a vec/array/list of string split on spaces in the original string"],
        "parts": {
          "input": "-- p\n-- class: tango\n",
          "expected": [
            {
              "type": "p",
              "attributes": [
                {"type": "class", "value": [
                  "tango"
                ]}
              ],
              "content": null
            }
          ]
        }
      },
  
  
      {
        "name": "Attribute Test: class (multiple)",
        "notes": ["class is stored as a vec/array/list of string split on spaces in the original string"],
        "parts": {
          "input": "-- p\n-- class: alfa bravo charlie\n",
          "expected": [
            {
              "type": "p",
              "attributes": [
                {"type": "class", "value": [
                  "alfa", "bravo", "charlie"
                ]}
              ],
              "content": null
            }
          ]
        }
      },
  
  
  
  
      {
        "name": "Attribute Test: contenteditable",
        "notes": [
          "there are explicit values for content editable. right now my parser just passes arbitrary input thru",
          "the values are 'true', 'false', 'plaintext-only'. So, not using a boolean here but a text string."
        ],
        "parts": {
          "input": "-- p\n-- contenteditable: true\n",
          "expected": [
            {
              "type": "p",
              "attributes": [
                {"type": "contenteditable", "value": "true"}
              ],
              "content": null
            }
          ]
        }
      },
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
      {
        "name": "Attribute Test: id",
        "notes": null,
        "parts": {
          "input": "-- p\n-- id: sierra tango\n",
          "expected": [
            {
              "type": "p",
              "attributes": [
                {"type": "id", "value": "sierra tango"}
              ],
              "content": null
            }
          ]
        }
      },
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
      {
        "name": "Aside: Just Text",
        "notes": [],
        "parts": {
          "input": "-- aside\n\nalfa bravo\n\ncharlie delta",
          "expected": [
            {
              "type": "aside",
              "attributes": null,
              "content": [
                {
                  "type": "paragraph",
                  "snippets": [
                    {
                      "type": "text",
                      "string": "alfa bravo"
                    }
                  ]
                },
  
                {
                  "type": "paragraph",
                  "snippets": [
                    {
                      "type": "text",
                      "string": "charlie delta"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
  
  
  
  
      {
        "name": "Title: Just Headline",
        "notes": [],
        "parts": {
          "input": "-- title\n\nalfa bravo",
          "expected": [
            {
              "type": "title",
              "attributes": null,
              "content": null,
              "headline": {
                "type": "paragraph",
                "snippets": [
                  {
                    "type": "text",
                    "string": "alfa bravo"
                  }
                ]
              }
            }
          ]
        }
      },
  
  
      {
        "name": "Title: Headline With Attributes",
        "notes": [],
        "parts": {
          "input": "-- title\n-- id: tango\n\nalfa bravo",
          "expected": [
            {
              "type": "title",
              "attributes": [
                {"type": "id", "value": "tango"}
              ]
              ,
              "content": null,
              "headline": {
                "type": "paragraph",
                "snippets": [
                  {
                    "type": "text",
                    "string": "alfa bravo"
                  }
                ]
              }
            }
          ]
        }
      },
  
  
  
  
  
      {
        "name": "PLACEHOLDER FOR JSON",
        "notes": [
          "This is just for dev to avoid having errors with extra/missing commas",
          "TODO: Remove this when all the initial tests are in place"
        ],
        "parts": {
          "input": "-- title\n\nPlaceholder To Remove",
          "expected": [
            {
              "type": "title",
              "attributes": null,
              "content": null,
              "headline": {
                "type": "paragraph",
                "snippets": [
                  {
                    "type": "text",
                    "string": "Placeholder To Remove"
                  }
                ]
              }
            }
          ]
        }
      }
  
    ]
  }
  