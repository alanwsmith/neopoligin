{
    "notes": {
      "notes": [
        "all the attrs will be tested under aside since it's the first section in the tests"
      ]
    },
  
    "inline_tags": [
  
  
      {
        "name": "link - basic",
        "notes": null,
        "parts": {
          "input": "-- p\n<<link|tango kilo|https://www.example.com/>>\n",
          "expected": [
            {
              "type": "p",
              "attributes": {},
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "link",
                      "url": "https://www.example.com/",
                      "attributes": {},
                      "string": "tango kilo"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
  
      {
        "name": "strong",
        "notes": null,
        "parts": {
          "input": "-- p\n<<strong|alfa bravo>>\n",
          "expected": [
            {
              "type": "p",
              "attributes": {},
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "strong",
                      "attributes": {},
                      "string": "alfa bravo"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
  
      {
        "name": "strong with attributes",
        "notes": null,
        "parts": {
          "input": "-- p\n<<strong|kilo sierra|id: echo>>\n",
          "expected": [
            {
              "type": "p",
              "attributes": {},
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "strong",
                      "attributes": {
                        "id": "echo"
                      },
                      "string": "kilo sierra"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
  
  
  
  
  
    ],
  
    "attributes": [
      {
        "name": "accesskey",
        "notes": null,
        "parts": {
          "input": "-- p\n-- accesskey: a\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "accesskey": "a" },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "autocapitalize",
        "notes": [
          "The autocapitalize attribute has a specific set of allowed values.",
          "Right now the spec doesn't limit that. My current parser just takes whatever the input value is but I could see a case for making it more explicit."
        ],
        "parts": {
          "input": "-- p\n-- autocapitalize: words\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "autocapitalize": "words" },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "autofocus",
        "notes": [
          "autofocus has no value. It either exists in the element or it does not",
          "If it exists and it's true the value should be added. Otherwise it should not. TBD on testing more of that"
        ],
        "parts": {
          "input": "-- p\n-- autofocus\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "autofocus": true },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "class (single)",
        "notes": [
          "class is stored as a vec/array/list of string split on spaces in the original string"
        ],
        "parts": {
          "input": "-- p\n-- class: tango\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "class": ["tango"] },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "class (multiple)",
        "notes": null,
        "parts": {
          "input": "-- p\n-- class: sierra foxtrot bravo\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "class": ["sierra", "foxtrot", "bravo"] },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "contenteditable",
        "notes": [
          "there are explicit values for content editable. right now my parser just passes arbitrary input thru",
          "the values are 'true', 'false', 'plaintext-only'. So, not using a boolean here but a text string."
        ],
        "parts": {
          "input": "-- p\n-- contenteditable: true\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "contenteditable": "true" },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "id",
        "notes": null,
        "parts": {
          "input": "-- p\n-- id: sierra tango\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "id": "sierra tango" },
              "content": null
            }
          ]
        }
      },
  
      {
        "ignore": true,
        "name": "PLACEHOLDER",
        "notes": [
          "This is a stub during dev to help avoid issue with trailing commas in json",
          "TODO: Remove this once the initial test suite is in place"
        ],
        "parts": {
          "input": "-- p\n-- accesskey: a\n",
          "expected": [
            {
              "type": "p",
              "attributes": { "accesskey": "a" },
              "content": null
            }
          ]
        }
      }
    ],
  
    "sections": [
      {
        "name": "aside",
        "notes": [],
        "parts": {
          "input": "-- aside\n\nalfa bravo\n\ncharlie delta",
          "expected": [
            {
              "type": "aside",
              "attributes": {},
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "string": "alfa bravo"
                    }
                  ]
                },
  
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "string": "charlie delta"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "aside - with attributes",
        "notes": [],
        "parts": {
          "input": "-- aside\n-- id: echo\n\nalfa bravo\n\ncharlie delta",
          "expected": [
            {
              "type": "aside",
              "attributes": {
                "id": "echo"
              },
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "string": "alfa bravo"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "string": "charlie delta"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "list",
        "notes": null,
        "parts": {
          "input": "-- list\n\n- alfa bravo",
          "expected": [
            {
              "type": "list",
              "attributes": {},
              "items": [
                {
                  "type": "listitem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "alfa bravo" }]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "list - multiple paragraphs",
        "notes": null,
        "parts": {
          "input": "-- list\n\n- alfa bravo\n\ncharlie delta",
          "expected": [
            {
              "type": "list",
              "attributes": {},
              "items": [
                {
                  "type": "listitem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "alfa bravo" }]
                    },
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "charlie delta" }]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "list - multiple items",
        "notes": null,
        "parts": {
          "input": "-- list\n\n- echo foxtrot\n\ndelta\n\n- sierra tango\n\nbravo",
          "expected": [
            {
              "type": "list",
              "attributes": {},
              "items": [
                {
                  "type": "listitem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "echo foxtrot" }]
                    },
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "delta" }]
                    }
                  ]
                },
                {
                  "type": "listitem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "sierra tango" }]
                    },
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "bravo" }]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "list - with preface",
        "notes": null,
        "parts": {
          "input": "-- list\n\nfoxtrot lima\n\n- papa kilo",
          "expected": [
            {
              "type": "list",
              "attributes": {},
              "items": [
                {
                  "type": "listitem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{ "type": "text", "string": "papa kilo" }]
                    }
                  ]
                }
              ],
              "preface": [
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "foxtrot lima" }]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "p",
        "notes": null,
        "parts": {
          "input": "-- p\n\npapa kilo foxtrot\n\nbravo alfa",
          "expected": [
            {
              "type": "p",
              "attributes": {},
              "content": [
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "papa kilo foxtrot" }]
                },
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "bravo alfa" }]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "p with attribute",
        "notes": null,
        "parts": {
          "input": "-- p\n-- id: sierra\npapa kilo foxtrot\n\nbravo alfa",
          "expected": [
            {
              "type": "p",
              "attributes": {
                "id": "sierra"
              },
              "content": [
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "papa kilo foxtrot" }]
                },
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "bravo alfa" }]
                }
              ]
            }
          ]
        }
      },
  
      {
        "name": "tile - just headline",
        "notes": null,
        "parts": {
          "input": "-- title\n\nkilo papa hotel",
          "expected": [
            {
              "type": "title",
              "attributes": {},
              "headline": {
                "type": "paragraph",
                "content": [{ "type": "text", "string": "kilo papa hotel" }]
              },
              "content": null
            }
          ]
        }
      },
  
      {
        "name": "tile - headline and content",
        "notes": null,
        "parts": {
          "input": "-- title\n\ndelta sierra foxtrot\n\nhotel bravo alfa",
          "expected": [
            {
              "type": "title",
              "attributes": {},
              "headline": {
                "type": "paragraph",
                "content": [{ "type": "text", "string": "delta sierra foxtrot" }]
              },
              "content": [
                {
                  "type": "paragraph",
                  "content": [{ "type": "text", "string": "hotel bravo alfa" }]
                }
              ]
            }
          ]
        }
      }
    ]
  }
  